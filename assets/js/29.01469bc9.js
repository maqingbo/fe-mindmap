(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{419:function(n,t,l){"use strict";l.r(t);var e=l(46),v=Object(e.a)({},(function(){var n=this,t=n.$createElement,l=n._self._c||t;return l("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[l("h2",{attrs:{id:"算法"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#算法"}},[n._v("#")]),n._v(" 算法")]),n._v(" "),l("ul",[l("li",[n._v("算法思想\n"),l("ul",[l("li",[n._v("二分")]),n._v(" "),l("li",[n._v("贪心")]),n._v(" "),l("li",[n._v("动态规划")])])]),n._v(" "),l("li",[n._v("常用算法\n"),l("ul",[l("li",[n._v("线性结构\n查找\n排序\n新增、删除")]),n._v(" "),l("li",[n._v("树\n遍历\n新增删除（平衡树）")]),n._v(" "),l("li",[n._v("图\n搜索\n最短路径")]),n._v(" "),l("li",[n._v("字符串\nKMP 算法\n前缀匹配")])])]),n._v(" "),l("li",[n._v("leetcode 刷题")])])])}),[],!1,null,null,null);t.default=v.exports}}]);