(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{430:function(t,l,v){"use strict";v.r(l);var e=v(46),_=Object(e.a)({},(function(){var t=this,l=t.$createElement,v=t._self._c||l;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h2",{attrs:{id:"从输入-url-到页面呈现发生了什么"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#从输入-url-到页面呈现发生了什么"}},[t._v("#")]),t._v(" 从输入 URL 到页面呈现发生了什么")]),t._v(" "),v("ol",[v("li",[t._v("DNS 解析\n"),v("ul",[v("li",[t._v("互联网中每一台机器都有唯一标识的 IP 地址，但是不好记，于是人们只记住域名，域名跟 IP 的匹配就是 DNS 解析。")]),t._v(" "),v("li",[t._v("DNS 解析时先找缓存，浏览器缓存 > 本地缓存 (hosts) > 路由器缓存，一直到域名服务器缓存。")])])]),t._v(" "),v("li",[t._v("TCP 连接\n"),v("ul",[v("li",[t._v("建立连接阶段：3 次握手。建立客户端和服务器之间的连接。")]),t._v(" "),v("li",[t._v("传输数据阶段")]),t._v(" "),v("li",[t._v("断开连接阶段：4 次挥手。断开客户端和服务器之间的连接。")])])]),t._v(" "),v("li",[t._v("发送 HTTP 请求\n"),v("ul",[v("li",[t._v("请求行：请求方法+路径+协议版本；常用方法有：GET、POST、PUT、DELETE、OPTIONS、HEAD。")]),t._v(" "),v("li",[t._v("请求报头：请求的附加信息和客户端自身的信息。"),v("RouterLink",{attrs:{to:"/parts/network/http.html#http-首部字段"}},[t._v("HTTP 首部字段")])],1),t._v(" "),v("li",[t._v("请求体：通过 POST、PUT 等方法时，通信的数据就包含在请求正文中。")])])]),t._v(" "),v("li",[t._v("服务器响应\n"),v("ul",[v("li",[t._v("状态行：协议版本+状态码+状态描述文本\n"),v("ul",[v("li",[t._v("常见状态码：12345 开头。"),v("RouterLink",{attrs:{to:"/parts/network/http.html#常见状态码"}},[t._v("常见状态码")])],1)])]),t._v(" "),v("li",[t._v("响应头：常见的响应报头字段 Server、Connection 等。")]),t._v(" "),v("li",[t._v("响应体：服务器返回给浏览器的文本信息，通常 HTML、CSS、JS、图片等文件就放在这一部分。")])])]),t._v(" "),v("li",[t._v("浏览器解析渲染页面\n"),v("ul",[v("li",[t._v("解析 HTML，生成 DOM 树")]),t._v(" "),v("li",[t._v("解析 CSS，生成 CSS 规则树（CSS Rule Tree）")]),t._v(" "),v("li",[t._v("将 DOM Tree 和 CSS Rule Tree 相结合，生成 渲染树（Render Tree）")]),t._v(" "),v("li",[t._v("从根节点开始，计算每一个元素的大小、位置，给出每个节点所应该出现的屏幕精确坐标，从而得到基于渲染树的 布局渲染树（Layout of the render tree）。")]),t._v(" "),v("li",[t._v("遍历渲染树，将每个节点用 UI 渲染引擎来绘制，从而将整棵树绘制到页面上，这个步骤叫 绘制渲染树（Painting the render tree）")])])]),t._v(" "),v("li",[t._v("断开连接")])]),t._v(" "),v("h2",{attrs:{id:"web-页面的生命周期"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#web-页面的生命周期"}},[t._v("#")]),t._v(" web 页面的生命周期")]),t._v(" "),v("ul",[v("li",[t._v("DOMContentLoaded\n"),v("ul",[v("li",[t._v("DOM 加载完成之后触发，发生在 document 对象上")]),t._v(" "),v("li",[t._v('document.addEventListener("DOMContentLoaded", ready)')]),t._v(" "),v("li",[t._v("在文档加载完成之后设置 DOMContentLoaded 事件处理程序，永远都不会执行")]),t._v(" "),v("li",[t._v("可使用 document.readyState 代替")])])]),t._v(" "),v("li",[t._v("load\n"),v("ul",[v("li",[t._v("当整个页面，包括样式、图片和其他资源被加载完成时，会触发 window 对象上的 load 事件。")]),t._v(" "),v("li",[t._v("window.onload = function () {}")])])]),t._v(" "),v("li",[t._v("beforeunload\n"),v("ul",[v("li",[t._v("如果访问者触发了离开页面的导航（navigation）或试图关闭窗口，beforeunload 处理程序将要求进行更多确认。")])])]),t._v(" "),v("li",[t._v("unload\n"),v("ul",[v("li",[t._v("当用户离开页面时触发")]),t._v(" "),v("li",[t._v("可以做一些不涉及延迟的操作，例如关闭相关的弹出窗口。")])])])])])}),[],!1,null,null,null);l.default=_.exports}}]);